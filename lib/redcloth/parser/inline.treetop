require File.dirname(__FILE__) + "/common"

module RedCloth
  module Parser
    grammar Inline
      include Common
      
      rule inline
        (
          inline_element
        )+ {
          def build(filter)
            Ast::Inline.new(
              elements.map {|e| e.build(filter) }
            )
          end
        }
      end
      
      rule inline_element
        bold /
        strong /
        em /
        default
      end
       
      rule strong
        '*' ![\s] contents:((!([^\s] '*') inline_element)* (![\s] inline_element)) '*' {
          def build(filter)
            Ast::InlineElement.new(
              {:type => :strong},
              # contents.elements.map {|e| e.elements[1].build(filter) }
              [contents.text_value]
            )
          end
        }
      end
      
      
      rule bold
        '**' contents:(!'**' inline_element)+ '**' {
          def build(filter)
            Ast::InlineElement.new(
              {:type => :bold},
              contents.elements.map {|e| e.elements[1].build(filter) }
            )
          end
        }
      end
      
      rule em
        '_' contents:(!'_' inline_element)+ '_' {
          def build(filter)
            Ast::InlineElement.new(
              {:type => :em},
              contents.elements.map {|e| e.elements[1].build(filter) }
            )
          end
        }
      end
      
      rule default
        . {
          def build(filter)
            text_value
          end
        }
      end
      
    end
  end
end