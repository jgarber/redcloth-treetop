require File.dirname(__FILE__) + "/common_inline"

module RedCloth
  module Parser
    module Inline
      grammar Strong
        include CommonInline
        
        rule strong
          '*' !'*' contents:strong_inline '*' {
            def build(filter)
              Ast::InlineElement.new(
                {:type => :strong},
                # contents.elements.map {|e| e.elements[1].build(filter) }
                # [contents.text_value]
                contents.all_inline_elements.map {|e| e.build(filter) }
              )
            end
          }
        end
        
        rule strong_inline
          element_1:strong_inline_element
          punct_1:punct
          more_elements:(inline_spaces strong_inline_element punct)* {
            def all_inline_elements
              [element_1, punct_1] + more_elements.elements.map {|e| [e.inline_spaces, e.strong_inline_element, e.punct] }.flatten
            end
          }
        end
        
        rule strong_inline_element
          strong_word
        end
        

        rule strong_word
        # ('*' [-'"'a-zA-Z0-9.!?]+ / '*' / [-'"'a-zA-Z0-9.!?]+) {
        # ( ( !([-'"'a-zA-Z0-9.!?] [*\s]) [-'"'a-zA-Z0-9.!?*] )* [-'"'a-zA-Z0-9.!?] ) {
          ((
            [-'"'a-zA-Z0-9.!] / 
            '*' &(![\s\t_?] .)
          )+ /
          '*') {
            def build(filter)
              text_value
            end
          }
        end
        
      end
    end
  end
end